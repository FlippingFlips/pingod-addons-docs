<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on PinGod AddOns</title><link>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/index.html</link><description>Recent content in Getting Started on PinGod AddOns</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://FlippingFlips.github.io/pingod-addons-docs/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Godot - Installation</title><link>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/installation/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/installation/index.html</guid><description>If you&amp;rsquo;re on windows, to make life easier make sure you have Chocolatey installed. This guide will leave snippets for choco install.
Godot 4.1.1-Mono PinGod is using Godot4 Mono (C#). Godot is portable (no installation required) just the download. Installing through choco will add godot to your paths so you can use it on the command line.
choco install godot-mono --version=4.1.1 - after install you can run godot to open the Godot project browser.</description></item><item><title>Clone / Download pingod-addons</title><link>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/clone-download/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/clone-download/index.html</guid><description>Using Git to clone the pingod-addons.
Make a directory on your system and use git clone https://github.com/FlippingFlips/pingod-addons.
This will create a folder named pingod-addons and download the files from the repository.
You could also use your own fork and clone that.
(Option 2) Downloading latest zipped repo pingod-addons</description></item><item><title>Load the demo project.godot</title><link>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/demo-project/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/demo-project/index.html</guid><description>Go into the pingod-addons and open the project on the command line.
On Windows you can do ALT+D to highlight the file explorer url then type cmd
Use godot -e to load the project into Godot Other ways to load Load projects into Editor by adding --path:
godot -e --path pingod-basicgame/BasicGameGodot</description></item><item><title>Build and Run</title><link>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/demo-build-run/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/demo-build-run/index.html</guid><description>Build The Demo-PinGod.tscn should be visible and you can build the project (top right Build button).
This demo scene is instancing a pre made MainScene. The MainScene has Modes which scenes can be added to. With this MainScene the Attract scene is added when the window is launched and after resources have loaded (pre loading scenes).
Play F5 to run the game. You can use F2 on the window to show border.</description></item><item><title>Logging Games</title><link>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/logging/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/logging/index.html</guid><description>In the appdata directory under the game name. %AppData%\Godot\app_userdata\PinGod-AddOns\Logs.
They are built in Godot rolling logs with the godot.log always being the latest.
Log location Image shows the users game save directory open in Sublime Text. Log example: Godot Engine v3.4.2.stable.mono.official.45eaa2daf - https://godotengine.org OpenGL ES 3.0 Renderer: Radeon RX 570 Series OpenGL ES Batching: ON PinGodGame:_EnterTree. getting cmd args PinGodGamecmd line available: 0 GameSettings:loaded:Ok PinGodGame:_EnterTree. log level: Debug PinGodGame:window: size:766x478 pos:403,221, onTop: True PinGodGame:window: project settings size: 1024x600 PinGodGame:looking for game patches.</description></item><item><title>Run with Visual Pinball</title><link>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/simulator-visual-pinball/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/getting-started/simulator-visual-pinball/index.html</guid><description>The pingod-addons/simulators directory contains an example table and script which is wired to work with the demo project.godot.
Setup A few steps are needed to make this possible so that Visual Pinball can launch the game and get machine changes from the game.
See How To install and Run
Running with VP The game can be launched with Visual Pinball after the setup is completed for the PinGod.VP.Controller.
If you launch from the repository as is then the project will be loaded relative .</description></item></channel></rss>