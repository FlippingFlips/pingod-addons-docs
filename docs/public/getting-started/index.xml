<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting Started on PinGod AddOns</title>
    <link>https://FlippingFlips.github.io/pingod-addons/getting-started/index.html</link>
    <description>Recent content in Getting Started on PinGod AddOns</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://FlippingFlips.github.io/pingod-addons/getting-started/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Godot - Installation</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/installation/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/installation/index.html</guid>
      <description>Download Godot 4 editor PinGod is using Godot4 Mono (C#). Godot is portable (no installation required) just the download.
On windows the easiest way is to install through chocolatey package manager using the command choco install godot-mono.
This particular package installs both x86 and x64 versions but uses x64 by default. This becomes an issue when you are wanting to run P-ROC because there&amp;rsquo;s currently no dll for x64 pinproc. Most users are on the x86 build of visual pinball and if the game was made specifically for that use in a simulator then it&amp;rsquo;s easier to set a flag when installing from chocalatey with the following in an admin powershell or terminal to force default x86:</description>
    </item>
    <item>
      <title>Godot - Configuration</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/configuration/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/configuration/index.html</guid>
      <description>You can ignore this if you have installed with chocolatey as this will be added for you on install. You should be able to run godot in any terminal.
Set Environment path to Godot How to add to environment (Windows) After any one of these steps you choose is completed then you can load Godot from anywhere using godot.
Windows UI - (Option 1) Push windows key and type path, this will filter to Edit the System Variables Push enter to open the System Properties window, from here select Environment Variables In the Environment Variables - System Variables (bottom window pane) find variable named Path and open this Add in the godot path in this section, OK out of the windows </description>
    </item>
    <item>
      <title>BasicGame - Git Clone</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-setup-git/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-setup-git/index.html</guid>
      <description>Using Git to clone the repositories
(Option 1) Clone Create a directory on machine where you are developing named pingod, this could be anything but we need a directory to clone into.
Browse into the pingod directory just created and use keypress ALT+D then type cmd and enter, to open windows cmd prompt in that directory.
Clone the pingod-addons with git clone https://github.com/FlippingFlips/pingod-addons-docs
You could also use your own fork and clone that.</description>
    </item>
    <item>
      <title>BasicGame - Linking addons</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-setup-addons/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-setup-addons/index.html</guid>
      <description>To run the pingod-basigame project in the examples folder you will need the addons directory linked or copied.
These addons contain base files and pinball framework that a game will use.
Link the AddOns You can copy the addons directory to your project (pingame-basicgame in this example), but it&amp;rsquo;s better to use a symbolic link to the addons so we are not duplicating files and you can keep the same addons across projects.</description>
    </item>
    <item>
      <title>BasicGame - Project.Godot</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-project/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-project/index.html</guid>
      <description>Use Alt+D in the project directory, type godot -e then enter to load project
You can use the .bat files in the projects root directory to load a project with . _godot_editor.bat
Load projects into Editor by adding --path:
godot -e --path pingod-basicgame/BasicGameGodot
Add on linking file what it does _link_addons.bat Links the pingod-addons the epositories addons directory into the BasicGameGodot project </description>
    </item>
    <item>
      <title>BasicGame - Godot Project Loaded Run Game</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-godot/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-godot/index.html</guid>
      <description>Build The MainScene should be visible and you can build the project (top right button).
If build success, you can re-enable the plugin if you need to, but it isn&amp;rsquo;t needed to run the game for now.
Play Hit F5 to run the game. You can use F2 on the window to show border.
Output window Quit ESC to exit the window</description>
    </item>
    <item>
      <title>BasicGame - Window Settings</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-window/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-window/index.html</guid>
      <description>Window controls key action F1 Settings Menu F2 Toggle Window Border F8 Quit? Settings Saved to users app_data directory. See Game Save Data
Audio Display Fullscreen FPS Game Some basic game settings PinGod Read/Write states can be disabled when not running with a simulator. </description>
    </item>
    <item>
      <title>Logging Games</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/logging/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/logging/index.html</guid>
      <description>In the appdata directory under the game name. %AppData%\Godot\app_userdata\BasicGameGodot\Logs.
Rolling logs, with the godot.log is always being the latest.
Log location In the appdata directory under the game name, logs .log are created. Use the open_app_data.bat to open directory to open the data directory.
The image above has the users game directory open with Sublime Text.
SublimeText - Game Data Folder The steps to add this directory and save project:</description>
    </item>
    <item>
      <title>User Game setting / data</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/game-save-data/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/game-save-data/index.html</guid>
      <description>In the appdata directory under the game name. %AppData%\Godot\app_userdata\BasicGameGodot\settings.save
You can open this directory with the _godot_appdata_dir.bat file
settings.save and gamedata.save Settings.save is json text, readable and editable.
This stores
display settings game settings audio settings memory map options You don&amp;rsquo;t need to edit these by hand. Any of your added settings will go in this file. Recordings See Recordings / Playback</description>
    </item>
    <item>
      <title>BasicGame - Game</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game/index.html</guid>
      <description>Game Window Switches Switches need to be added to _gameWindowSwitches in PinGodGame.tscn.
Keys action 5 Credits Q,W,E,R Trough Switches 1-4 1 Start Game T Plunger Lane Y inlane_l Simulating with keypress actions Add credits (5), hold all the trough switches down (QWER) then push start (1).
Add some points with Y = switch 22 inlane_l
Simulate ball drain by activating all the trough switches.
Use T plunger lane switch and drain to activate a ball save</description>
    </item>
    <item>
      <title>BasicGame - Visual Pinball</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game-vp/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game-vp/index.html</guid>
      <description>Now that the game is building and running it can be launched with Visual Pinball.
Table can be run from any location in Visual Pinball.
The controller will load the game when the vp player is launched.
Use the _vp_edit.bat or _vp_play.bat to open the table easier
Provided you have the controller setup and have built the godot project this will play.
COM Controller setup We need to register the COM object before it can be used by other applications such as a simulator.</description>
    </item>
    <item>
      <title>BasicGame - Visual Pinball Script</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game-vp-script/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game-vp-script/index.html</guid>
      <description>BasicGame-PinGod.vbs A script with the same name is included with the table. This will be used with the visual pinball script editor.
This can make it easier to edit outside of table, keep track of changes etc. At the top of this image it shows MODIFYING EXTERNAL.
PinGod.VP.Controller The first section marked in red is the PinGod.VP.Controller initialization.
Game Project Location When debugging, if the games Godot project is relative to the table (the same as this repo), then you won&amp;rsquo;t have to adjust the script for the GameDirectory.</description>
    </item>
    <item>
      <title>BasicGame - Exporting</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game-exporting/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game-exporting/index.html</guid>
      <description>You can export the game to be used without the Godot editor. The Build folder will be used to export to.
Godot Export file does? _godot_export_full.bat Exports Windows Desktop which is executable and main pack _godot_export_pck.bat Exports Windows Desktop Pack which updates the main pack. The executable will be the same for all games as it basically is Godot You only need to run _godot_export_full.bat one time to get the executable, this will also build a .</description>
    </item>
    <item>
      <title>BasicGame - Assets and Pcks</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game-assets-and-packs/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-game-assets-and-packs/index.html</guid>
      <description>You may want to make a base asset pack to copy and load across multiple games or ship game with separate packs for easier updating.
See Link separate assets project on how to make from linking.
Your assets will keep the same file structure, so to reach one of your assets in script the path would be &amp;quot;res://assets/img/myimage.png.</description>
    </item>
    <item>
      <title>BasicGame - Create first asset scene</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-create-asset-scene/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-create-asset-scene/index.html</guid>
      <description>In Godot right click assets directory and add a new folder named scenes. Right click the new scenes folder and add new scene and name it test_scene. Select the type of node to be a Sprite by using Other Node for this scenes Root Node. Save the scene Ctrl+S after it opens and the file will be created test_scene.tscn
Find an image on disk and drag it into the Godot path.</description>
    </item>
    <item>
      <title>BasicGame - Script Editing Setup</title>
      <link>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-script-editing/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/getting-started/basicgame-script-editing/index.html</guid>
      <description>Script editing / Editing .tscn files outside of Godot editor It&amp;rsquo;s not great to use the Godot editor for editing C# scripts. We prefer to use Visual Studio, but with any text editor you can build changes made in Godot.
Visual Studio Bigger install, full ide, code completion
Visual Studio Code Smaller, quicker to load a project directory, code completion, has a terminal.
Sublime Text Smaller text editing, this is good for using saved directories and viewing the contents of the games app_data and logs.</description>
    </item>
  </channel>
</rss>