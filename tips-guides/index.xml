<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tip / Guides / Notes on PinGod AddOns</title>
    <link>https://FlippingFlips.github.io/pingod-addons/tips-guides/index.html</link>
    <description>Recent content in Tip / Guides / Notes on PinGod AddOns</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://FlippingFlips.github.io/pingod-addons/tips-guides/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating custom score mode scene</title>
      <link>https://FlippingFlips.github.io/pingod-addons/tips-guides/custom-score-mode/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/tips-guides/custom-score-mode/index.html</guid>
      <description>Start with duplicating the ScoreMode.tscn file from the addons.
Filter the files in godot for score and duplicate it, rename it to MygameScoreMode or anything like that. You want to move the file after it&amp;rsquo;s created to somewhere in your root like res://scenes.
The following image is the steps above and loaded.
If you select the ScoreMode node and look in the inspector these are the options from that script.</description>
    </item>
    <item>
      <title>Creating custom playfield switch window</title>
      <link>https://FlippingFlips.github.io/pingod-addons/tips-guides/playfield-switch-window/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/tips-guides/playfield-switch-window/index.html</guid>
      <description>Create Playfield image to use: Open the game in VP and take a screenshot of the editor with the playfield in view. You can do this with Alt + PrtScn. Open Microsoft Paint and paste in you screenshot of the editor. Get there with windows key and typing paint Select the outer playfield and crop it in MsPaint Click resize by pixels, uncheck Maintain aspect ratio and set to 400 x 900 Save this image into your game folder so Godot picks it up and you can assign this to window image.</description>
    </item>
    <item>
      <title>Creating custom Score Entry scene</title>
      <link>https://FlippingFlips.github.io/pingod-addons/tips-guides/scoreentry/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/tips-guides/scoreentry/index.html</guid>
      <description>Filter Godot files by ScoreEntry Duplicate the ScoreEntry.tscn and move to your res://autoload directory Add the packed scene location, replacing any existing in the res:autoload/Resources.tscn Add the new scene into the Game.tscn so it knows where your version is Edit away without effecting the addons and script. You can take it further than cosmetic from here with a script. Things you can try in the scene:
Setting a theme on the top control ScoreEntry, which will set all in the scene, provided you have made custom theme entries like Label themes.</description>
    </item>
    <item>
      <title>PinGodGame Projects - Create Template</title>
      <link>https://FlippingFlips.github.io/pingod-addons/tips-guides/new-project-pingodgame-template/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/tips-guides/new-project-pingodgame-template/index.html</guid>
      <description>Empty Project Steps below to create new empty project
Create new project folder, add empty text file named project.godot Symbolic link the addons to the project so you can reuse it, remove it etc. Symbolic Link If we&amp;rsquo;re in pingod\PinGodDev and pingod\pingod-addons is a directory above the current then we can link the addons
SET cDir=%cd%cd ../pingod-addons/addonsSET addDir=%cd%cd %cDir%mklink /D addons &amp;#34;%addDir%&amp;#34; Open project in Godot Open the project in Godot (godot -e) and you&amp;rsquo;ll see the directory which you have linked Playing the game will ask you to define a scene to load Add Scene Add new Node2D Rename the node and save it as MyScene Save in the root directory and not the addons directory The new scene should be at res://MyScene.</description>
    </item>
    <item>
      <title>Blank Empty Projects</title>
      <link>https://FlippingFlips.github.io/pingod-addons/tips-guides/new-project/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/tips-guides/new-project/index.html</guid>
      <description>In the examples directory is a folder named !template. This is bare bones minimum. If on windows just copy and paste this folder in the examples and rename it to your name.
What&amp;rsquo;s in the folder? Properties This contains a launchSettings.json for launching the project inside Visual Studio. These are launch profiles and you can add your own in this file.
_link_addons.bat This file is explained in previous here but it will link the addons folder into the game so you are not duplicating files, just reusing the addons.</description>
    </item>
    <item>
      <title>PinGodGame Projects - New From Template</title>
      <link>https://FlippingFlips.github.io/pingod-addons/tips-guides/create-pingodgame-template/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/tips-guides/create-pingodgame-template/index.html</guid>
      <description>Duplicate Template Copy the pingod-projects-template and paste in same directory, by default windows adds - Copy to the directory Rename the copy to pingod-projects-myproject You will need to link the addons again. Delete addons directory then run the _link_addons.bat project.godot file You can add a project name to the project.godot file before running the project. These are found under [application] in the config section. Yours will be empty.
The reason why we&amp;rsquo;ve added Projects-MyProject here is that it&amp;rsquo;s easier to tell the type in the appdata, because this is the name it will be saved under in the users app data.</description>
    </item>
    <item>
      <title>PinGodGame Projects - Add a C# Script</title>
      <link>https://FlippingFlips.github.io/pingod-addons/tips-guides/create-pingodgame-template-script/index.html</link>
      <pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate>
      <guid>https://FlippingFlips.github.io/pingod-addons/tips-guides/create-pingodgame-template-script/index.html</guid>
      <description>Create Script for MyScene This template project will not give any errors if you don&amp;rsquo;t use a C# script but if using an existing scene that uses a script then we will need to add a C# project to the directory.
As we&amp;rsquo;ve referenced a C# script from the SwitchOverlay.tscn then we need to make a C# project.
Fortunately that is easy as we just have to make a new script to do this.</description>
    </item>
  </channel>
</rss>