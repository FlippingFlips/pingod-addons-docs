<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TODO on PinGod AddOns</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/index.html</link><description>Recent content in TODO on PinGod AddOns</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://FlippingFlips.github.io/pingod-addons-docs/todo/index.xml" rel="self" type="application/rss+xml"/><item><title>BasicGame - Window Settings</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-window/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-window/index.html</guid><description>Window controls key action F1 Settings Menu F2 Toggle Window Border F8 Quit? Settings Saved to users app_data directory. See Game Save Data
Audio Display Fullscreen FPS Game Some basic game settings PinGod Read/Write states can be disabled when not running with a simulator.</description></item><item><title>BasicGame - Game</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game/index.html</guid><description>Game Window Switches Switches need to be added to _gameWindowSwitches in PinGodGame.tscn.
Keys action 5 Credits Q,W,E,R Trough Switches 1-4 1 Start Game T Plunger Lane Y inlane_l Simulating with keypress actions Add credits (5), hold all the trough switches down (QWER) then push start (1).
Add some points with Y = switch 22 inlane_l
Simulate ball drain by activating all the trough switches.
Use T plunger lane switch and drain to activate a ball save</description></item><item><title>BasicGame - Visual Pinball</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game-vp/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game-vp/index.html</guid><description>Now that the game is building and running it can be launched with Visual Pinball.
Table can be run from any location in Visual Pinball.
The controller will load the game when the vp player is launched.
Use the _vp_edit.bat or _vp_play.bat to open the table easier
Provided you have the controller setup and have built the godot project this will play.
COM Controller setup We need to register the COM object before it can be used by other applications such as a simulator.</description></item><item><title>BasicGame - Visual Pinball Script</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game-vp-script/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game-vp-script/index.html</guid><description>BasicGame-PinGod.vbs A script with the same name is included with the table. This will be used with the visual pinball script editor.
This can make it easier to edit outside of table, keep track of changes etc. At the top of this image it shows MODIFYING EXTERNAL.
PinGod.VP.Controller The first section marked in red is the PinGod.VP.Controller initialization.
Game Project Location When debugging, if the games Godot project is relative to the table (the same as this repo), then you won&amp;rsquo;t have to adjust the script for the GameDirectory.</description></item><item><title>Tip / Guides / Notes</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/tips-guides/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/tips-guides/index.html</guid><description>Anything we find useful to you will go here. Any tips, tutorials.</description></item><item><title>BasicGame - Exporting</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game-exporting/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game-exporting/index.html</guid><description>You can export the game to be used without the Godot editor. The Build folder will be used to export to.
Godot Export file does? _godot_export_full.bat Exports Windows Desktop which is executable and main pack _godot_export_pck.bat Exports Windows Desktop Pack which updates the main pack. The executable will be the same for all games as it basically is Godot You only need to run _godot_export_full.bat one time to get the executable, this will also build a .</description></item><item><title>BasicGame - Assets and Pcks</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game-assets-and-packs/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-game-assets-and-packs/index.html</guid><description>You may want to make a base asset pack to copy and load across multiple games or ship game with separate packs for easier updating.
See Link separate assets project on how to make from linking.
Your assets will keep the same file structure, so to reach one of your assets in script the path would be &amp;quot;res://assets/img/myimage.png.</description></item><item><title>BasicGame - Create first asset scene</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-create-asset-scene/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-create-asset-scene/index.html</guid><description>In Godot right click assets directory and add a new folder named scenes. Right click the new scenes folder and add new scene and name it test_scene. Select the type of node to be a Sprite by using Other Node for this scenes Root Node. Save the scene Ctrl+S after it opens and the file will be created test_scene.tscn
Find an image on disk and drag it into the Godot path.</description></item><item><title>Symbolic - Linking addons</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/symbolic-linking-addons/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/symbolic-linking-addons/index.html</guid><description>TODO: remove basic game guide, add for new projects and how to reuse same code
To run the pingod-basigame project in the examples folder you will need the addons directory linked or copied.
These addons contain base files and pinball framework that a game will use.
Link the AddOns You can copy the addons directory to your project (pingame-basicgame in this example), but it&amp;rsquo;s better to use a symbolic link to the addons so we are not duplicating files and you can keep the same addons across projects.</description></item><item><title>BasicGame - Script Editing Setup</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-script-editing/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/general-todo/basicgame-script-editing/index.html</guid><description>Script editing / Editing .tscn files outside of Godot editor It&amp;rsquo;s not great to use the Godot editor for editing C# scripts. We prefer to use Visual Studio, but with any text editor you can build changes made in Godot.
Visual Studio Bigger install, full ide, code completion
Visual Studio Code Smaller, quicker to load a project directory, code completion, has a terminal.
Sublime Text Smaller text editing, this is good for using saved directories and viewing the contents of the games app_data and logs.</description></item><item><title>P-ROC - PinGod NetProc</title><link>https://FlippingFlips.github.io/pingod-addons-docs/todo/pingodnetproc/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/todo/pingodnetproc/index.html</guid><description>Using PinGodGame and NetProc to run with a P-ROC board.
This version of PinGod is quite similar to the example without a P-ROC, only this uses modes and handles machine items differentley.
Games can be simulated and developed away from the machine with a simulator (visual pinball) or using the playfield window.
Overview Overview of what we get from using NetProc:
PinProc Controller (send data to board USB) Game Controller Modes (with or without CanvasLayers) Databased machine items, adjustments and audits Trough Management (Mode) Ball Search, Ball Save (Modes) P-ROC Links ðŸ”— multimorphic.</description></item></channel></rss>