<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pingod-machine on PinGod AddOns</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/index.html</link><description>Recent content in pingod-machine on PinGod AddOns</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding Switches</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/adding-switches/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/adding-switches/index.html</guid><description>The following are the default switches in the autoload\Machine.tscn file.
When created in the Godot interface, they are saved in this scene file. You can add your switches here from text editor which is faster.
_switches = { &amp;#34;coin1&amp;#34;: 0, &amp;#34;coin2&amp;#34;: 1, &amp;#34;coin3&amp;#34;: 2, &amp;#34;coin4&amp;#34;: 3, &amp;#34;exit&amp;#34;: 4, &amp;#34;down&amp;#34;: 5, &amp;#34;up&amp;#34;: 6, &amp;#34;enter&amp;#34;: 7, &amp;#34;coinDoor&amp;#34;: 8, &amp;#34;flipperLwL&amp;#34;: 9, &amp;#34;flipperLwR&amp;#34;: 11, &amp;#34;flipperUpL&amp;#34;: 13, &amp;#34;flipperUpR&amp;#34;: 15, &amp;#34;slamTilt&amp;#34;: 16, &amp;#34;tilt&amp;#34;: 17, &amp;#34;ballShooter&amp;#34;: 18, &amp;#34;start&amp;#34;: 19, &amp;#34;trough0&amp;#34;: 21, &amp;#34;trough1&amp;#34;: 22, &amp;#34;trough2&amp;#34;: 23, &amp;#34;trough3&amp;#34;: 24, &amp;#34;plungerLane&amp;#34;: 25, &amp;#34;inlaneL&amp;#34;: 26, &amp;#34;inlaneR&amp;#34;: 27, &amp;#34;outlaneL&amp;#34;: 28, &amp;#34;outlaneR&amp;#34;: 29, &amp;#34;slingL&amp;#34;: 30, &amp;#34;slingR&amp;#34;: 31, &amp;#34;bumper0&amp;#34;: 32, &amp;#34;bumper1&amp;#34;: 33, &amp;#34;bumper2&amp;#34;: 34, &amp;#34;mballSaucer&amp;#34;: 35 }</description></item><item><title>Actions</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/adding-godot-actions/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/adding-godot-actions/index.html</guid><description>Godot Actions - Window inputs Godot uses Actions and we can use the input map to map switches / actions to them. In the projects Input Map add switches to keys like the example below.
sw20-27 are unassigned, but sw19 is set to 1, which is the default start button.
This start button action 19 (sw19) is checked states in the PinGodGame.cs._Input
You will need to add switches you want to use on the window in the WindowActions.</description></item><item><title>Ball Trough (Scene)</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/trough/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/trough/index.html</guid><description>The Trough.tscn handles the ball trough, ball saving, trough switches, early save switches, shooter lane switch.
Included in the examples PinGodGame.tscn tree.
Most cases you will leave the default settings here, but you can add more switches from this.
Trough / Ball Save Options Trough switche names Ball save seconds Ball save lamp name Ball save multiball seconds Early Ball Save switches Number of Balls to Save Trough Solenoid(coil) Plunger lane switch name Set what to do on ball started Ball search options Enabled Ball Search coils to pulse (usually saucers, scoops not the trough) Search stop switches = Switches that stop the search Search wait time = Time to wait before pulsing coils Trough Class Reference</description></item><item><title>Using Switches C#</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/usingswitches/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/usingswitches/index.html</guid><description>Using in game scene c# scripts Connect to the Machines SwitchCommand. Only needs to be done once in _EnterTree or _Ready.
public override void _Ready() { base._Ready(); if (HasNode(&amp;#34;/root/PinGodGame&amp;#34;)) { pinGod = GetNode(&amp;#34;/root/PinGodGame&amp;#34;) as IPinGodGame; //use the switch command on machine through the game as we&amp;#39;re in a game pinGod.MachineNode.SwitchCommand += OnSwitchCommandHandler; } else { Logger.WarningRich(nameof(BaseMode), &amp;#34;[color=red]&amp;#34;, &amp;#34;: no PinGodGame found&amp;#34;, &amp;#34;[/color]&amp;#34;); } }Create handler.
/// &amp;lt;summary&amp;gt; /// Switch handlers for lanes and slingshots /// &amp;lt;/summary&amp;gt; /// &amp;lt;param name=&amp;#34;name&amp;#34;&amp;gt;&amp;lt;/param&amp;gt; /// &amp;lt;param name=&amp;#34;index&amp;#34;&amp;gt;&amp;lt;/param&amp;gt; /// &amp;lt;param name=&amp;#34;value&amp;#34;&amp;gt;&amp;lt;/param&amp;gt; private void OnSwitchCommandHandler(string name, byte index, byte value) { if (value &amp;lt;= 0) return; switch (name) { case &amp;#34;outlaneL&amp;#34;: case &amp;#34;outlaneR&amp;#34;: game.</description></item><item><title>Using Switches (Controller)</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/usingswitchescontroller/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/usingswitchescontroller/index.html</guid><description>Auto Switch handlers (No scripting) In the BasicGame, Visual Pinball table switches are added to a simulator collection named AllSwitches.
Add the switch number to the TimerInterval box in the Misc settings to 20 and add the switch to the AllSwitches collection.
All VP table objects should be covered, so you wouldn&amp;rsquo;t have to remember to use Spin instead of Hit for a spinner in the collection. (Scripting) Visual Pinball - Switch On / Off Sub sw_plunger_lane_hit() : Controller.</description></item><item><title>Using Coils (C#)</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/usingcoils/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/usingcoils/index.html</guid><description>Coils can be On, Off or Pulsed. Get a reference to /root/Machine from a scene.
var pingodMachine = GetNode&amp;lt;MachineNode&amp;gt;(&amp;#34;/root/Machine&amp;#34;); pingodMachine.CoilPulse(&amp;#34;trough&amp;#34;, 225);</description></item><item><title>Using Coils (Controller)</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/usingcoilscontroller/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/usingcoilscontroller/index.html</guid><description>Visual Pinball SolCallbacks When Visual Pinball detects changed coils the callbacks are invoked by coil number.
The script example to handle coil 35 would be SolCallback(35) = &amp;quot;Lampshow2&amp;quot;. This will invoke the LampShow2 sub routine (if you have one)
SolCallback(1) = &amp;#34;bsTrough.solOut&amp;#34; &amp;#39; The trough which makes the ball pop out.... SolCallback(2) = &amp;#34;FlippersEnabled&amp;#34; &amp;#39; Enable and disable flippers, when ball drains, tilt etcSome standard callbacks for default game</description></item><item><title>Recording / Playback</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/recordings-playback/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/recordings-playback/index.html</guid><description>Quick guide on how to record and playback a game.
Recording a game can speed up your game development for game logic.
They would usually start off by using trough switches then adding credits and starting a game.
Any events after this to test any recorded sequence like clearing a target bank, draining your ball.
Testing modes and testing the complete game.
Recording Recording files are saved in the user://recordings/recordname.record</description></item></channel></rss>