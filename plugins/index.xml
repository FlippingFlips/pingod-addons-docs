<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PinGod-Addons on PinGod AddOns</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/index.html</link><description>Recent content in PinGod-Addons on PinGod AddOns</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://FlippingFlips.github.io/pingod-addons-docs/plugins/index.xml" rel="self" type="application/rss+xml"/><item><title>About Plugins</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/about/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/about/index.html</guid><description>Plugins / Autoload Some pingod-addons have a plugin that you can enable or have an AutoLoad singleton when the plugin is enabled. These should work in any order you enable them.
Open the project settings to view Plugins and Autoload
AutoLoad When some plugins are enabled they also have an Autoload class and they will be in this view. You can access these by the name in any scene script like root/PinGodGame.</description></item><item><title>pingod-core</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/core/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/core/index.html</guid><description>Base classes, models used by the other modules</description></item><item><title>pingod-assets</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/assets/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/assets/index.html</guid><description/></item><item><title>pingod-controls</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/controls/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/controls/index.html</guid><description>Tools are custom add on objects in Godot. You can use the attribute [Tool] and turn a script into a tool.
They will be available to search and select from in Godot so you can add to your scenes.</description></item><item><title>pingod-adjustments</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/adjustments/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/adjustments/index.html</guid><description>Game saves, machine adjustments</description></item><item><title>pingod-windows</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/windows/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/windows/index.html</guid><description/></item><item><title>pingod-machine</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/machine/index.html</guid><description>Represents a pinball machine and holds all the machine items like switches, coils, lights.
ðŸ—’ MachineConfig Class Reference
Ball Search Machine Items Recording Playback Switch Window Trough PlungerLane BallSaver</description></item><item><title>pingod-modes</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/modes/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/modes/index.html</guid><description>Main Scene
Attract Scene
Game Scene
Score Mode Scene
Base Mode Scene
Bonus Mode Scene
Score Entry Scene
Tilt Scene</description></item><item><title>pingod-game</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/pingodgame/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/pingodgame/index.html</guid><description> Scenes using this Most modes rely on this being loaded by using GetNode&amp;lt;PinGodGame&amp;gt;(&amp;quot;/root/PinGodGame&amp;quot;) from the script.
This scene doesn&amp;rsquo;t house any other scenes, it&amp;rsquo;s autoloaded with the game and you can add your own and override its script if need to.
The BasicGame uses its own script based on PinGodGame named CustomPinGodGame which is autoloaded with the plugin.
PinGodGame.tscn Scene Guide PinGodGame.cs Class Definitions</description></item><item><title>pingod-resources</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/resources/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/resources/index.html</guid><description>The Resources plugin is a preloader of assets and scenes which are called Packed Scenes.
We can get a resource from this autoload and instance scenes with it.
Packed Scenes These scenes will be loaded with a game. By default the BasicGame loads the following:
Bonus.tscn ScoreEntry.tscn Tilt.tscn Multiball.tscn Attract.tscn Once these scenes and all resources have been loaded then we add a scene like the Attract.tscn.
Resources (Key, Path) Add resources that will be pre loaded in this dictionary by key , path.</description></item><item><title>pingod-audio</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/audiomanager/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/audiomanager/index.html</guid><description>Helper class for audio.
SfxAssets VoiceAssets MusicAssets Class Reference note: if you want the finished signal on audio to work when the file is an ogg, the loop must be unchecked then reimported from the import tab
_EnterTree Initializes the AudioStreamPlayers. Loads sound pack resources and adds any assets found into the provided dictionaries. Will try and load a pingod.snd.pck asset file, tries res://pingod.snd.pck first, then the working directory Methods PinGodGame has wrapped some of the common methods so you can use a PinGodGame reference to do audio controls, playing audio, music, voices.</description></item><item><title>pingod-memorymap-win</title><link>https://FlippingFlips.github.io/pingod-addons-docs/plugins/memorymap/index.html</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons-docs/plugins/memorymap/index.html</guid><description>This class writes coil, lamp and led states to memory. It also read switch states from memory.
It is used in conjunction with the controller for COM to sync with the simulator.
You only need to enable this when you intend to run it with a simulator.
The image below shows your options.
Option Description Is Enabled Enable/Disable, this allows to have plug-in enabled but disable it here Write Delay Delay for the loop to write to memory, 10 is a good default, less cpu, responsive Read Delay Delay for the loop to read from memory, 10 is a good default, less cpu, responsive MapName should be left, the controller uses this name Coil Total If you need to increase coil count, it needs to match the VP script Led Total If you need to increase led count, it needs to match the VP script Lamp Total If you need to increase lamp count, it needs to match the VP script Switch Total If you need to increase switch count, it needs to match the VP script MutexName should be left, the controller uses this name</description></item></channel></rss>